WORKROOT=../../../

LIBPATH=$(WORKROOT)lib2-64


PUBLIC=$(WORKROOT)/public
ULLIB=$(LIBPATH)/ullib/
NSHEAD=$(PUBLIC)/nshead/
DICT=$(LIBPATH)/dict/
BSL=$(WORKROOT)/libsrc/bsl/

INCLUDES= -I$(ULLIB)/include -I$(NSHEAD) -I$(DICT)/include/ -I$(BSL) -I$(PUBLIC) -I$(BSL)/yperfbench/include
CFLAGS = -Wall -W -pipe -Wno-unused-parameter -g  -Wno-deprecated -D_XOPEN_SOURE=500 -D_GNU_SOURCE
LDFLAGS= -L$(BSL)/yperfbench/lib/ -lyperfbench   -L$(ULLIB)/lib -L$(NSHEAD) -L$(DICT)/lib -luldict -lcrypto -lcrypt -lnshead -lullib -lpthread -lm


#测试查询性能
unsafe_hash 2: bsl_unsafe_hash.cpp $(CFLAGS) $(LDFLAGS) $(INCLUDES)
	hash_bucket = 1000000
	hash_datanum = 1000000 700000
	thread_num = 1 4 8 16 32 48 64
	value_size = 8 16 32
	query_loop = 100

#测试查询性能
unsafe_hash_O3 2: bsl_unsafe_hash.cpp $(CFLAGS) $(LDFLAGS) $(INCLUDES) -O3
	hash_bucket = 1000000
	hash_datanum = 1000000 700000
	thread_num = 1 4 8 16 32 48 64
	value_size = 8 16 32
	query_loop = 100

#测试多读一写下的性能
thread_hash 2: bsl_thread_hash.cpp $(CFLAGS) $(LDFLAGS) $(INCLUDES)
	hash_bucket = 1000000
	hash_datanum = 1000000 700000
	thread_num = 1 4 8 16 32 48 64
	value_size = 8 16 32
	query_loop = 100
	insert_speed = 1000000

#测试多读一写下的性能
thread_hash_O3 2: bsl_thread_hash.cpp $(CFLAGS) $(LDFLAGS) $(INCLUDES) -O3
	hash_bucket = 1000000
	hash_datanum = 1000000 700000
	thread_num = 1 4 8 16 32 48 64
	value_size = 8 16 32
	query_loop = 100
	insert_speed = 1000000

#测试链表性能	
listcase1 : bsltest.cpp $(CFLAGS) $(LDFLAGS) $(INCLUDES)
	time = 10000000 20000000 40000000

listcase2 : stllist.cpp $(CFLAGS) $(LDFLAGS) $(INCLUDES)
	time = 10000000 20000000 40000000

bslsort : bslsort.cpp $(CFLAGS) $(LDFLAGS)  $(INCLUDES)
	len = 1000000 2000000 4000000

stlsort : stlsort.cpp $(CFLAGS) $(LDFLAGS) $(INCLUDES)
	len = 1000000 2000000 4000000
