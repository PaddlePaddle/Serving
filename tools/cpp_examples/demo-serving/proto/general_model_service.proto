// Copyright (c) 2019 PaddlePaddle Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";
import "pds_option.proto";
import "builtin_format.proto";
package baidu.paddle_serving.predictor.general_model;

option cc_generic_services = true;

message Tensor {
  repeated string data = 1;
  repeated int32 int_data = 2;
  repeated int64 int64_data = 3;
  repeated float float_data = 4;
  optional int32 elem_type =
      5; // 0 means int64, 1 means float32, 2 means int32, 3 means string
  repeated int32 shape = 6;       // shape should include batch
  repeated int32 lod = 7;         // only for fetch tensor currently
  optional string name = 8;       // get from the Model prototxt
  optional string alias_name = 9; // get from the Model prototxt
};

message Request {
  repeated Tensor tensor = 1;
  repeated string fetch_var_names = 2;
  optional bool profile_server = 3 [ default = false ];
  required uint64 log_id = 4 [ default = 0 ];
};

message Response {
  repeated ModelOutput outputs = 1;
  repeated int64 profile_time = 2;
  bool profile_server = 3;
  uint64 log_id = 4;

  // Error code
  int32 err_no = 5;
  // Error messages
  string err_msg = 6;
};

message ModelOutput {
  repeated Tensor tensor = 1;
  optional string engine_name = 2;
}

service GeneralModelService {
  rpc inference(Request) returns (Response);
  rpc debug(Request) returns (Response);
  option (pds.options).generate_impl = true;
};
