// Copyright (c) 2019 PaddlePaddle Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";
import "pds_option.proto";
import "builtin_format.proto";

package baidu.paddle_serving.predictor.bert_service;

option cc_generic_services = true;

message BertReqInstance {
  repeated int64 token_ids = 1;
  repeated int64 sentence_type_ids = 2;
  repeated int64 position_ids = 3;
  repeated float input_masks = 4;
};

message Request {
  repeated BertReqInstance instances = 1;
  optional int64 max_seq_len = 2;
  optional int64 emb_size = 3;
  optional string feed_var_names = 4;
  optional string fetch_var_names = 5;
};

message EmbeddingValues { repeated float values = 1; };

message BertResInstance { repeated EmbeddingValues instances = 1; };

message Response {
  repeated BertResInstance instances = 1;
  optional int64 op_time = 2;
  optional int64 infer_time = 3;
};

service BertService {
  rpc inference(Request) returns (Response);
  rpc debug(Request) returns (Response);
  option (pds.options).generate_impl = true;
};
